producer:
  nameOverride: ""
  fullnameOverride: "producer"

  replicas: 100

  daemonset:
    enabled: false

  deployment:
    annotations: { }
    labels: { }
    affinity: { }
    enabled: true

    envFrom: [ ]
    extraEnvs: [ ]

    extraVolumes:
      - name: snapshot
        persistentVolumeClaim:
          claimName: snapshot0

    extraVolumeMounts:
      - mountPath: /data
        name: snapshot

    filebeatConfig:
      filebeat.yml: |
        http:
          enabled: false
        filebeat.inputs:
          - type: log
            paths:
              - /data/server.log

        output.kafka:
          # hosts: [ "kafka:9092" ]
          hosts: [ "redpanda:9092" ]
          topic: "filebeat"
          required_acks: -1
          compression: gzip

    nodeSelector: { }
    secretMounts: [ ]
    securityContext:
      runAsUser: 0
      privileged: false
    resources:
      requests:
        cpu: "100m"
        memory: "100Mi"
      limits:
        cpu: "1"
        memory: "8Gi"
    tolerations: [ ]

  extraContainers: [ ]
  extraInitContainers: [ ]

  hostPathRoot: /var/lib

  dnsConfig: { }
  hostAliases: [ ]
  image: "docker.elastic.co/beats/filebeat"
  imageTag: "7.17.3"
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  livenessProbe:
    exec:
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          true
    failureThreshold: 3
    initialDelaySeconds: 1
    periodSeconds: 10
    timeoutSeconds: 5

  readinessProbe:
    exec:
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          true
    failureThreshold: 3
    initialDelaySeconds: 1
    periodSeconds: 10
    timeoutSeconds: 5

  managedServiceAccount: true

  clusterRoleRules:
    - apiGroups:
        - ""
      resources:
        - namespaces
        - nodes
        - pods
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - "apps"
      resources:
        - replicasets
      verbs:
        - get
        - list
        - watch

  podAnnotations: { }

  serviceAccount: ""

  serviceAccountAnnotations: { }

  terminationGracePeriod: 30

  priorityClassName: ""

  updateStrategy: RollingUpdate